@using ContosoCrafts.WebSite.Models
@using ContosoCrafts.WebSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFileProductService ProductService


<h3>Products</h3>
<!-- Filter Section-->
<div style="padding:inherit">
    <input type="text" @bind="Tag" placeholder="Filter by keyword" />
    <button @onclick="OnInitialized">Filter</button>
    @foreach (var item in DataPermutations)
    {
        <h1>@item.Key</h1>
    }
</div>

@code {
    // Parameter for the selected tag
    [Parameter] public string Tag { get; set; }

    private Dictionary<string, HashSet<string>> DataPermutations { get; set; }

    // List of filtered products
    private IEnumerable<ProductModel> FilteredProducts;

    protected override void OnInitialized()
    {
        // Get all products from the service
        var allProducts = ProductService.GetAllData();

        DataPermutations = ProductService.GetAllDataPermutations();

        // Initialize FilteredProducts to show all products by default
        FilteredProducts = allProducts;

        // Filter by tag if a tag is provided
        if (!string.IsNullOrEmpty(Tag))
        {
            FilteredProducts = allProducts.Where(p =>
                p.Category.Equals(Tag, StringComparison.OrdinalIgnoreCase) ||
                p.Size.Equals(Tag, StringComparison.OrdinalIgnoreCase) ||
                p.Color.Equals(Tag, StringComparison.OrdinalIgnoreCase) ||
                p.Material.Any(m => m.Equals(Tag, StringComparison.OrdinalIgnoreCase)) ||
                p.Style.Any(s => s.Equals(Tag, StringComparison.OrdinalIgnoreCase))
            );
        }
    }

    ProductModel selectedProduct;
    string selectedProductId;

    void SelectProduct(string productId)
    {
        selectedProductId = productId;
        selectedProduct = ProductService.GetAllData().First(x => x.Id == productId);
    }
}

@if (!FilteredProducts.Any()) {
    <div class="text-center" p-4>
        <p>No products found for the given criteria. Try a new criteria!</p>
    </div>
}

<div class="card-columns">
    @foreach (var product in FilteredProducts)
    {
        <div class="card">
            <a href="ProductDetails/@product.Id" class="text-decoration-none">
                <div class="card-img" style="background-image: url('@product.Image');">
                </div>
                <div class="card-body">
                    <h5 class="card-title text-center" style="color: #5B5B5B">@product.Title </h5>
                </div>
            </a>
        </div>
    }
</div>

@if (selectedProduct != null)
{
    <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedProduct.Description</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
