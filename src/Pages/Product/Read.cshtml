@page "/Read/{id}"
@model ContosoCrafts.WebSite.Pages.ReadModel

<!-- Check if the selected product exists in the model -->
@if (Model.SelectedProduct != null)
{
    <!-- Card to display product details -->
    <div class="card">
        <div class="card-body">

            <!-- Display the title of the selected product -->
            <h2>@Model.SelectedProduct.Title</h2>

            <!-- Display the description of the selected product -->
            <p>@Model.SelectedProduct.Description</p>

            <!-- Display the product category -->
            <p>Category: @Model.SelectedProduct.Category</p>

            <!-- Display the product size -->
            <p>Size: @Model.SelectedProduct.Size</p>

            <!-- Display the product color -->
            <p>Color: @Model.SelectedProduct.Color</p>

            <!-- Display the product materials -->
            <p>
                Material:
                @{
                    // Get the list of materials associated with the product
                    var materialList = Model.SelectedProduct.Material;

                    // Iterate over each material and display them, separating by commas
                    for (var i = 0; i < materialList.Count; i++)
                    {
                        @materialList[i]
                        if (i < materialList.Count - 1)
                        {
                            <!-- Add a comma between materials if it's not the last item -->
                            <text>, </text>
                        }
                    }
                }
            </p>

            <!-- Display the product styles -->
            <p>
                Style:
                @{
                    // Get the list of styles associated with the product
                    var styleList = Model.SelectedProduct.Style;

                    // Iterate over each style and display them, separating by commas
                    for (var i = 0; i < styleList.Count; i++)
                    {
                        @styleList[i]
                        if (i < styleList.Count - 1)
                        {
                            <!-- Add a comma between styles if it's not the last item -->
                            <text>, </text>
                        }
                    }
                }
            </p>

            <!-- Display the number of likes for the selected product -->
            <p>Number of likes: @Model.SelectedProduct.Likes</p>

            <!-- Display all comments for the product -->
            <div class="comments-section">
                @if (Model.SelectedProduct.Comments != null && Model.SelectedProduct.Comments.Any())
                {
                    <p>Comments:</p>
                    <ul class="comments-list">
                        @foreach (var comment in Model.SelectedProduct.Comments)
                        {
                            <li>@comment</li>
                        }
                    </ul>
                }
                @if (Model.SelectedProduct.Comments == null || !Model.SelectedProduct.Comments.Any())
                {
                    <p>Comments: No comments yet.</p>
                }
            </div>
        </div>
    </div>

    <!-- Form for going back to the index page -->
    <form method="post">
        <!-- Back button to go back to the Index page -->
        <a asp-page="./Index" class="btn btn-secondary">Back</a>
    </form>
}
else
{
    <!-- If the product is not found, display a message -->
    <p>Product not found.</p>
}
